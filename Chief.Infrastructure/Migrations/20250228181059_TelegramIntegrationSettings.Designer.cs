// <auto-generated />
using System;
using Chief.Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Chief.Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250228181059_TelegramIntegrationSettings")]
    partial class TelegramIntegrationSettings
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Chief.Domain.Entities.ExcludedProduct", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("OnboardingProfileId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("OnboardingProfileId");

                    b.ToTable("ExcludedProducts");
                });

            modelBuilder.Entity("Chief.Domain.Entities.FoodPreference", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("OnboardingProfileId")
                        .HasColumnType("integer");

                    b.Property<bool>("Value")
                        .HasColumnType("boolean");

                    b.HasKey("Id");

                    b.HasIndex("OnboardingProfileId");

                    b.ToTable("FoodPreferences");
                });

            modelBuilder.Entity("Chief.Domain.Entities.HouseholdMember", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Activity")
                        .HasColumnType("text");

                    b.Property<int>("Age")
                        .HasColumnType("integer");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<double?>("Height")
                        .HasColumnType("double precision");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("OnboardingProfileId")
                        .HasColumnType("integer");

                    b.Property<double?>("Weight")
                        .HasColumnType("double precision");

                    b.HasKey("Id");

                    b.HasIndex("OnboardingProfileId");

                    b.ToTable("HouseholdMembers");
                });

            modelBuilder.Entity("Chief.Domain.Entities.OnboardingProfile", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("Completed")
                        .HasColumnType("boolean");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("CurrentStep")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("OnboardingProfiles");
                });

            modelBuilder.Entity("Chief.Domain.Entities.TimePreference", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Day")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Meal")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("OnboardingProfileId")
                        .HasColumnType("integer");

                    b.Property<string>("Time")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("OnboardingProfileId");

                    b.ToTable("TimePreferences");
                });

            modelBuilder.Entity("Chief.Domain.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("Age")
                        .HasColumnType("integer");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("FirstName")
                        .HasColumnType("text");

                    b.Property<string>("LanguageCode")
                        .HasColumnType("text");

                    b.Property<string>("LastName")
                        .HasColumnType("text");

                    b.Property<long>("TelegramUserId")
                        .HasColumnType("bigint");

                    b.Property<string>("TelegramUsername")
                        .HasColumnType("text");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Chief.Domain.Entities.ExcludedProduct", b =>
                {
                    b.HasOne("Chief.Domain.Entities.OnboardingProfile", "OnboardingProfile")
                        .WithMany("ExcludedProducts")
                        .HasForeignKey("OnboardingProfileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("OnboardingProfile");
                });

            modelBuilder.Entity("Chief.Domain.Entities.FoodPreference", b =>
                {
                    b.HasOne("Chief.Domain.Entities.OnboardingProfile", "OnboardingProfile")
                        .WithMany("FoodPreferences")
                        .HasForeignKey("OnboardingProfileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("OnboardingProfile");
                });

            modelBuilder.Entity("Chief.Domain.Entities.HouseholdMember", b =>
                {
                    b.HasOne("Chief.Domain.Entities.OnboardingProfile", "OnboardingProfile")
                        .WithMany("HouseholdMembers")
                        .HasForeignKey("OnboardingProfileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("OnboardingProfile");
                });

            modelBuilder.Entity("Chief.Domain.Entities.OnboardingProfile", b =>
                {
                    b.HasOne("Chief.Domain.Entities.User", "User")
                        .WithMany("OnboardingProfiles")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Chief.Domain.Entities.TimePreference", b =>
                {
                    b.HasOne("Chief.Domain.Entities.OnboardingProfile", "OnboardingProfile")
                        .WithMany("TimePreferences")
                        .HasForeignKey("OnboardingProfileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("OnboardingProfile");
                });

            modelBuilder.Entity("Chief.Domain.Entities.OnboardingProfile", b =>
                {
                    b.Navigation("ExcludedProducts");

                    b.Navigation("FoodPreferences");

                    b.Navigation("HouseholdMembers");

                    b.Navigation("TimePreferences");
                });

            modelBuilder.Entity("Chief.Domain.Entities.User", b =>
                {
                    b.Navigation("OnboardingProfiles");
                });
#pragma warning restore 612, 618
        }
    }
}
